digraph "main"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="main",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Initialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Host_8c.html#a0ea9f99f85b380e912940f351366a862",tooltip="Initialize the MPI environment, allowing the CUDA device to be selected before (if necessary) ..."];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="SetDeviceBeforeInit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$CUDA__Aware__MPI_8c.html#ac7925a5469b04c01679b20577671c975",tooltip="This allows the MPI process to set the CUDA device before the MPI environment is initialized For the ..."];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="ParseCommandLineArguments",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Input_8c.html#a243a9fb9128b70313b30d3f082cc0a61",tooltip="Parses the application&#39;s command-line arguments. "];
  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="ApplyTopology",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Host_8c.html#aef3118f365ec96030a022fa17b73fc42",tooltip="Generates the 2D topology and establishes the neighbor relationships between MPI processes. "];
  Node5 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="SetDeviceAfterInit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$CUDA__Aware__MPI_8c.html#aa8cb031e8cba7840a96582f530283fd5",tooltip="This allows the MPI process to set the CUDA device after the MPI environment is initialized For the C..."];
  Node1 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="InitializeDataChunk",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Host_8c.html#a63442a950638ea4accb5dcb5ad7a8b87",tooltip="This allocates and initializes all the relevant data buffers before the Jacobi run. "];
  Node1 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="PreRunJacobi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Host_8c.html#a053b144f9d3b11ad9b3563447876629f",tooltip="This function is called immediately before the main Jacobi loop. "];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="RunJacobi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Host_8c.html#a52ea6f92f186de790a55fdf700026dd9",tooltip="This is the main Jacobi loop, which handles device computation and data exchange between MPI processe..."];
  Node9 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="CallJacobiKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Device_8cu.html#a08324d1c9b1ee7193242670ba4b97d88",tooltip="The host wrapper for one Jacobi iteration. "];
  Node10 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="CheckCudaCall",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Device_8cu.html#a87c5ce86d74764a06a13b73dff013870",tooltip="The host function for checking the result of a CUDA API call. "];
  Node9 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="CopyDeviceBlock",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Device_8cu.html#aeaebe085afbffaa0d6bcd77fa16ceb97",tooltip="The host wrapper for copying the updated block over the old one, after a Jacobi iteration finishes..."];
  Node12 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="TransferAllHalos",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Host_8c.html#ac28696e075d2053b4de5662556c16f3d",tooltip="This performs the exchanging of all necessary halos between 2 neighboring MPI processes. "];
  Node13 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="CopyDevSideEdgesFromBlock",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Device_8cu.html#a95a52e3c2e58d2d94403a0dce2e29686",tooltip="The host wrapper for copying (packing) the values on the left and right side of the data block to sep..."];
  Node14 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="ExchangeHalos",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$CUDA__Aware__MPI_8c.html#a1dc0674ebcbca5a781885f2204d78251",tooltip="Exchange halo values between 2 direct neighbors This is the main difference between the normal CUDA &amp;..."];
  Node13 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="CopyDevHalosToBlock",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Device_8cu.html#a3b641f8b5d521a230416b64d8b809324",tooltip="The host wrapper for copying (unpacking) the values from the halo buffers to the left and right side ..."];
  Node16 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="PostRunJacobi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Host_8c.html#a29316e4a0e49080875975ead1809fdbb",tooltip="This function is called immediately after the main Jacobi loop. "];
  Node1 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="Finalize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Host_8c.html#ad25cf65f450abbc68de1a6409b0c92ba",tooltip="Close (finalize) the MPI environment and deallocate buffers. "];
}
